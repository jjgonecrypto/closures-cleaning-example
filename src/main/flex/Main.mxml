<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:local="*">
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			import mx.rpc.events.ResultEvent;
			
			import org.justinjmoses.examples.closures.IDoesSomething;
			import org.justinjmoses.examples.closures.types.*;
			import org.osflash.signals.ISignal;
			
			import spark.events.IndexChangeEvent;
			
			private function onButtonChange(evt:IndexChangeEvent):void
			{
				//prevent reselection
				//selector.enabled = false;
				
				switch (evt.newIndex)
				{
					case 0: //weak - THIS IS UNSTABLE! 
						output.type = SomethingWeak;
						break;
					case 1: //named
						output.type = SomethingNamed;
						break;
					case 2: //callee
						output.type = SomethingCallee;
						break;
					case 3: //type-level reference
						output.type = SomethingDisposable;
						break;
					case 4: //ISignal.addOnce()
						output.signalType = SomethingSignalsAddOnce;
						break;
					case 5: //signals + arguments.callee
						output.signalType = SomethingSignalsCallee;
						break;
					case 6: //ISignal.removeAll()
						output.signalType = SomethingSignalsRemoveAll;
						break;
				}
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:layout>
		<s:VerticalLayout />
	</s:layout>
	
	<s:ButtonBar id="selector" change="onButtonChange(event)" width="100%">
		<s:ArrayCollection>
			<fx:String>1. Weak References</fx:String>
			<fx:String>2. Locally Named</fx:String>
			<fx:String>3. Arugments.Callee</fx:String>
			<fx:String>4. Type-level reference</fx:String>
			<fx:String>5A. Signals addOnce()</fx:String>
			<fx:String>5B. Signals arguments.Callee</fx:String>
			<fx:String>5C. Signals removeAll()</fx:String>
		</s:ArrayCollection>
	</s:ButtonBar>
	
	<s:Line height="2" width="100%" />
	
	<local:OutputContainer id="output" width="100%" height="100%" />
	
</s:Application>
